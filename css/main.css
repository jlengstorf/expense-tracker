/*
 * # main.css
 * Master stylesheet for the app, which loads in all other styles.
 *
 * This stylesheet depends on PostCSS to function properly. It also makes the
 * assumption that older browsers won't be able to support the app at all, so
 * the styles don't bother trying to go back too far.
 */


/*
 * ## Variables
 * Keeps site-wide settings concentrated in one place.
 */

/*
 * ### Color Variables
 */
$color-lightest: #FEFEFE;
$color-lighter: #EEE;
$color-light: #AAA;
$color-dark: #777;
$color-darker: #444;
$color-darkest: #111;

$color-brand: #29A0E2;

/*
 * ### Measurement Variables
 */
$border-width: 1px;
$border-width-heavy: 2px;
$border-radius: 1rem;

/*
 * ### Typography Variables
 */
$font-family-base: 'quicksand', sans-serif;
$font-family-heading: sans-serif;
$font-weight-base: normal;
$font-weight-bold: bold;
$font-weight-light: lighter;
$line-height-base: 1.375;
$font-size-small: 75%;


/*
 * ## Basic Reset
 * Not a full CSS reset; just setting some sane defaults.
 */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

/*
 * Using the lobotomized owl selector (via @heydonworks)
 * @see http://alistapart.com/article/axiomatic-css-and-lobotomized-owls
 */
*+* {
  margin-top: 1.5rem;
}

body {
  background: $color-lightest;
  color: $color-darker;
}


/*
 * ## Typography
 * Web fonts and font baselines.
 */

/*
 * ### Web Fonts
 * Quicksand is from http://www.fontsquirrel.com/fonts/quicksand
 */
@import 'fonts/quicksand.css';

/*
 * ### Typography Baseline Settings
 * Vertical rhythm, font sizes, etc.
 */
html {
  font-family: $font-family-base;
  font-weight: $font-weight-base;
  line-height: $line-height-base;
}


/*
 * ## Common Styles
 * Pieces that are used in multiple places.
 */

/*
 * TODO: Make this less terrible.
 */
header,main,footer {
  display: block;
  max-width: 768px;
  margin-left: auto;
  margin-right: auto;
}

/*
 * ### Accessibility Helper
 * Borrowed from Bootstrap. Allows for accessible content that's hidden.
 */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

/*
 * ### Modal Windows
 * Several parts of the app display content in a modal overlay.
 */
.modal {

  /*
   * Modals should fill the screen above all other content. No scrolling.
   */
  position: fixed;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  background: $color-lightest;
  z-index: 10;

  /*
   * Keeps the modal content from sticking to the edges of the viewport.
   */
  padding: 10vw;

  /*
   * Ensures that modal content is always vertically/horizontally centered.
   */
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  justify-content: center;

  > div { flex: 1 100%; }

  /*
   * Adds a loading modal to show activity
   */
  > .loading {
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background-color: color( $color-brand alpha(90%) );
      z-index: 5;
    }

    &::after {
      content: '\f110';
      position: absolute;
      top: 50%;
      left: 50%;
      color: $color-lightest;
      font-family: fontawesome;
      font-size: 5rem;
      text-shadow: 0 0 2px color( $color-brand blackness(+ 5%) );
      animation: 1s loader infinite linear;
      z-index: 10;
    }
  }

  /*
   * Modals are brought in using `ReactCSSTransitionGroup`.
   * @see https://facebook.github.io/react/docs/animation.html
   */
  transition: 250ms left ease-in-out;

  &-enter {
    left: 100vw;

    &&-active { left: 0; }
  }

  &-leave {
    left: 0;

    &&-active { left: 100vw; }
  }

  /*
   * Consistent styling for closing modals. This style should only be applied
   * to a link that triggers the modal close action.
   *
   * A React-style example:
   *     <a href="#" onClick={cancelCB} className="modal__close">cancel</a>
   */
  &__close {
    display: inline-block;
    margin-top: 15px;
    border-bottom: $border-width solid transparent;
    color: $color-light;
    font-size: $font-size-small;
    line-height: 1;
    text-align: center;
    text-decoration: none;

    &:before {
      content: '— or —';
      display: block;
      margin-bottom: 10px;
      color: $color-light;
      font-size: 9px;
      text-align: center;
    }

    &:hover,&:focus {
      border-color: $color-dark;
      color: $color-dark;
      outline: none;
    }
  }
}

@keyframes loader {
    0% { transform: translate3d(-50%, -50%, 0) rotate(  0deg); }
  100% { transform: translate3d(-50%, -50%, 0) rotate(360deg); }
}

/*
 * ## Components
 * Loads the required components for the app.
 */

@import './components/ExpenseTracker.css';
@import './components/Debts.css';
@import './components/Expenses.css';
@import './components/Expense.css';


/*
 * ### Form Display
 */
.form {
  &__error {
    margin: 20px -20px 0;
    padding: 20px;
    background: color(orange alpha(10%) );
    border: $border-width solid color(orange alpha(50%) );
    border-left: none;
    border-right: none;
    color: orange;
    font-size: 11px;
    text-align: center;
    text-shadow: 1px 1px 1px color( $color-lightest alpha(50%) );
  }

  &__input {
    &+& {
      margin-top: 10px;
    }

    label {
      display: block;
      color: $color-light;
      font-size: 11px;
      text-transform: uppercase;
    }

    input,select {
      width: 100%;
      height: 30px;
      padding: 5px;
      margin-top: 0;
      background: $color-lightest;
      border: $border-width solid $color-lighter;
      font-size: 16px;
      line-height: 20px;
      transition: 250ms all linear;

      &:focus {
        border-color: $color-light;
        outline: none;
      }
    }
  }

  &__controls {
    margin-top: 20px;
    text-align: center;
  }

  &__submit {
    display: block;
    width: 100%;
    padding: 20px;
    background: $color-darkest;
    border: none;
    color: $color-lighter;
    cursor: pointer;
    font-size: 16px;
    letter-spacing: 0.05em;
    line-height: 1;
    text-align: center;
    text-transform: uppercase;
    transition: 250ms all linear;

    &:hover,&:focus {
      background: $color-darker;
      color: $color-lightest;
      outline: none;
    }
  }

  &__cancel {
    display: inline-block;
    margin-top: 15px;
    border-bottom: 1px solid transparent;
    color: $color-light;
    font-size: 12px;
    line-height: 1;
    text-align: center;
    text-decoration: none;

    &:before {
      content: '— or —';
      display: block;
      margin-bottom: 10px;
      color: $color-light;
      font-size: 9px;
      text-align: center;
    }

    &:hover,&:focus {
      border-color: $color-dark;
      color: $color-dark;
      outline: none;
    }
  }
}

/*
 * ### Authentication
 */
.auth {

  &__login {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    justify-content: center;
  }

  &__button {
    flex: 1 100%;
  }
}


/*
 * ### Buttons
 */
.button {
  margin: 1rem 0 0;
  padding: 0.5rem;
  border: $border-width solid $color-dark;
  color: $color-lightest;
  cursor: pointer;
  font-size: 1.1rem;
  line-height: 1;
  text-align: left;
  transition: 250ms all linear;

  /*
   * Buttons support icons via a modifier class (see below).
   */
  &::before {
    display: inline-block;
    border-right: $border-width solid color( $color-lighter alpha(25%) );
    margin-right: 0.5rem;
    padding: 0.5rem;
    font-family: fontawesome;
    font-size: 1.1rem;
  }

  &--facebook {
    background-color: #3b5998;
    border-color: color( #3b5998 blackness(+ 5%) );

    &::before { content: '\f09a'; }

    &:hover,&:focus {
      background-color: color( #3b5998 blackness(+ 20%) );
      border-color: color( #3b5998 blackness(+ 25%) );
      outline: none;
    }
  }

  &--google {
    background-color: #d50f25;
    border-color: color( #d50f25 blackness(+ 5%) );
    &::before { content: '\f1a0'; }

    &:hover,&:focus {
      background-color: color( #d50f25 blackness(+ 15%) );
      border-color: color( #d50f25 blackness(+ 20%) );
      outline: none;
    }
  }
}
